{"version":3,"sources":["components/User.js","components/TodoItem.js","components/TodoList.js","API/getTodos.js","API/users.js","App.js","index.js"],"names":["User","_ref","user","react_default","a","createElement","href","concat","id","name","TodoItem","todo","title","components_User","completed","className","TodoList","todos","map","components_TodoItem","getTodo","fetch","then","response","json","getUsers","getTodosWithUsers","todosList","usersList","_objectSpread","find","userId","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","loadData","setState","isLoading","error","initialized","Promise","all","_ref2","slicedToArray","todoList","userList","catch","finally","state","_this$state","preparedTodos","Fragment","Button","type","onClick","inverted","color","length","components_TodoList","React","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.bb8944e3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst User = ({ user }) => (\n  <td>\n    <a href={`mailto:${user.id}`} />\n    {user.name}\n  </td>\n);\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    name: PropTypes.string,\n    username: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from './User';\n\nconst TodoItem = ({ todo }) => (\n  <tr>\n    <td>{todo.title}</td>\n    <User user={todo.user} />\n\n    {todo.completed ? (\n      <td className=\"positive\">\n        <i className=\"icon checkmark\" />\n        Approved\n      </td>\n    ) : (\n      <td className=\"negative\">\n        <i className=\"icon close\" />\n        In procces\n      </td>\n    )\n    }\n  </tr>\n);\n\nexport default TodoItem;\n\nTodoItem.propTypes = {\n  todo: PropTypes.shape({\n    title: PropTypes.string,\n    completed: PropTypes.bool,\n  }).isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TodoItem from './TodoItem';\n\nconst TodoList = ({ todos }) => (\n  <table className=\"ui red table\">\n    <thead>\n      <tr>\n        <th>TODO item</th>\n        <th>The name of the user</th>\n        <th>Completed</th>\n      </tr>\n    </thead>\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem todo={todo} />\n      ))}\n    </tbody>\n  </table>\n);\n\nexport default TodoList;\n\nTodoList.propTypes = {\n  todos: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","const todosURL = 'https://jsonplaceholder.typicode.com/todos';\n\nexport const getTodo = () => fetch(todosURL)\n  .then(response => response.json());\n","const usersURL = 'https://jsonplaceholder.typicode.com/users';\n\nexport const getUsers = () => fetch(usersURL)\n  .then(response => response.json());\n","import React from 'react';\nimport './App.css';\nimport { Button, Segment } from 'semantic-ui-react';\nimport TodoList from './components/TodoList';\n\nimport { getTodo } from './API/getTodos';\nimport { getUsers } from './API/users';\n\nfunction getTodosWithUsers(todosList, usersList) {\n  return todosList.map(todo => ({\n    ...todo,\n    user: usersList.find(user => todo.userId === user.id),\n  }));\n}\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userList: [],\n      todoList: [],\n      isLoading: false,\n      error: false,\n      initialized: false,\n    };\n  }\n\n  loadData = () => {\n    this.setState({\n      isLoading: true,\n      error: false,\n      initialized: true,\n    });\n\n    Promise.all([getTodo(), getUsers()])\n      .then(([todoList, userList]) => {\n        this.setState({\n          todoList,\n          userList,\n        });\n      })\n      .catch(() => {\n        this.setState({\n          error: true,\n          isLoading: false,\n        });\n      })\n      .finally(() => {\n        this.setState({\n          isLoading: false,\n          initialized: true,\n        });\n      });\n  };\n\n  render() {\n    const {\n      todoList, userList, isLoading, error,\n    } = this.state;\n    const preparedTodos = getTodosWithUsers(todoList, userList);\n\n    if (isLoading) {\n      return <p>loading...</p>;\n    }\n\n    if (error) {\n      return (\n        <>\n          <p>Error occurred!!!</p>\n;\n          <Button\n            type=\"button\"\n            onClick={this.loadData}\n            inverted\n            color=\"red\"\n          >\n            Try Again!\n          </Button>\n        </>\n      );\n    }\n\n    if (todoList.length === 0 && userList.length === 0) {\n      return (\n        <>\n          <p>No users and todos yet!</p>\n          <Button type=\"button\" onClick={this.loadData} color=\"green\">\n            Load\n          </Button>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Dynamic list of todos</h1>\n        <TodoList todos={preparedTodos} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}